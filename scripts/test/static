#!/bin/bash

if [[ -z "$DOCROOT" ]]; then
  DOCROOT=web
fi

if [[ -z "$PHP_SCRIPTS" ]]; then
  PHP_SCRIPTS="$DOCROOT/modules/custom $DOCROOT/themes/custom $DOCROOT/sites"
fi

if [[ -z "$SKIP_ESLINT" ]]; then
  SKIP_ESLINT=NO
fi

RESULTS_DIR=./test-results

mkdir -p "$RESULTS_DIR"

echo "Checking for left over conflict markers."
echo "<?xml version=\"1.0\" encoding=\"utf-8\"?> <testsuites>" >> $RESULTS_DIR/git-merge-marker.xml
while IFS= read -r result
do
  echo "<testsuite package=\"git\" time=\"0\" tests=\"1\" errors=\"1\" name=\"$result\"><testcase time=\"0\" name=\"$result\"><error message=\"Merge conflict marker detected\"><![CDATA[line "$( echo "$result" | grep -o [0-9]*$)", Error Merge conflict marker detected]]  </error></testcase></testsuite>" >> $RESULTS_DIR/git-merge-marker.xml
done < <( git diff --check | grep -oP ".*(?=: leftover conflict marker)" )
echo "</testsuites>" >> $RESULTS_DIR/git-merge-marker.xml


# Lint php code for syntax errors
if composer run --list | grep -q "  lint"; then
  echo "Custom composer lint script detected. Running composer lint."
  composer -n lint
else
  # Default PHP Linting

  # PHP Lint
  echo "Running PHP Lint"
  find $PHP_SCRIPTS \( -iname  '*.php' -o -iname '*.inc' -o -iname '*.module' -o -iname '*.install'-o -iname '*.theme' \) '!' -path '*/node_modules/*' -print0 | xargs -0 -n1 -P8 php -l

  # Default ESLinting if availible
  if [[ -f ./node_modules/.bin/eslint ]] && [[ $SKIP_ESLINT != "YES" ]]; then
    echo "Running ESlint."
    ./node_modules/.bin/eslint --format junit --output-file .test-results/eslint.xml .
    # TODO Add a default eslint config to check JS and YAML files to Drupal
    # core's base standard.
  fi
fi

# Checking for stinky code.
if composer run --list | grep -q "  lint"; then
  echo "Custom composer code-sniff script detected. Running composer code-sniff."
  composer -n code-sniff
else
  # Check coding standards
  if [[ -f ./vendor/bin/phpcs && $SKIP_CODE_SNIFF != "YES" ]]; then
    if [[ -f phpcs.xml  || -f phpcs.xml.dist ]]; then
      echo "Running PHPCS"
      ./vendor/bin/phpcs -p --report-summary --report-junit=$RESULTS_DIR/phpcs.xml
      # TODO Add a default phpcs config to check coding standards of PHP files
      # to Drupal core's base standard.
    fi
  fi
fi

